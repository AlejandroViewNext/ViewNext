[versions]
agp = "8.3.1"
converterGson = "2.9.0"
jrangeSeekBar = "1.1.0"
kotlinxCoroutinesAndroid = "1.7.3"
kotlinxCoroutinesAndroidVersion = "1.6.0"
ktorClientCio = "2.0.0"
lifecycleExtensions = "1.1.1"  # Cambiado desde "extensions"
gradle = "4.1.3"
kotlin = "1.9.0"
coreKtx = "1.12.0"
junit = "4.13.2"
junitVersion = "1.1.5"
espressoCore = "3.5.1"
appcompat = "1.6.1"
kotlinGradlePlugin = "1.4.21"
material = "1.11.0"
activity = "1.8.0"
constraintlayout = "2.1.4"
materialVersion = "1.4.0"
mockwebserver = "4.9.0"
retromock = "0.3.1"
retromockVersion = "1.1.0"
roomRuntime = "2.6.1"
runtime = "1.1.1"
supportCompat = "28.0.0"

[libraries]
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "roomRuntime" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "roomRuntime" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "roomRuntime" }
compiler = { module = "android.arch.lifecycle:compiler", version.ref = "lifecycleExtensions" }  # Cambiado desde "extensions"
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "converterGson" }
infinum-retromock = { module = "co.infinum:retromock", version.ref = "retromockVersion" }
jrange-seek-bar = { module = "com.jaygoo.widget:jrange-seek-bar", version.ref = "jrangeSeekBar" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutinesAndroid" }
kotlinx-coroutines-android-v160 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutinesAndroidVersion" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktorClientCio" }
lifecycleExtensions = { module = "android.arch.lifecycle:extensions", version.ref = "lifecycleExtensions" }  # Cambiado desde "extensions"
gradle = { module = "com.android.tools.build:gradle", version.ref = "gradle" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlinGradlePlugin" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
androidx-activity = { group = "androidx.activity", name = "activity", version.ref = "activity" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
material-v140 = { module = "com.google.android.material:material", version.ref = "materialVersion" }
mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockwebserver" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "converterGson" }
retrofit2-retrofit-mock = { module = "com.squareup.retrofit2:retrofit-mock", version.ref = "converterGson" }
retromock = { module = "com.github.andrzejchm.RETROMOCK:retromock", version.ref = "retromock" }
retromock-junit = { module = "com.github.andrzejchm.RETROMOCK:retromock-junit", version.ref = "retromock" }
retromock-kotlin = { module = "com.github.andrzejchm.RETROMOCK:retromock-kotlin", version.ref = "retromock" }
room-compiler = { module = "android.arch.persistence.room:compiler", version.ref = "runtime" }
runtime = { module = "android.arch.persistence.room:runtime", version.ref = "runtime" }
support-compat = { module = "com.android.support:support-compat", version.ref = "supportCompat" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
jetbrainsKotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
